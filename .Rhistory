ncol = 1, repeat.tick.labels = "y") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma_format(accuracy = 0.1)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Stock Selling Prices Each Day per GICS Industry Group",
subtitle = "Faceted by Pricing Type; Open, High, Low, Close") +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_text(angle = 90,
hjust = 1, vjust = 0.25),
text = element_text(size = 12),
panel.border = element_blank(),
panel.background = "grey80")
ggplot(filter(ASX_Long_Lower, Variable != "Volume")) +
geom_boxplot(aes(x = fct_rev(GICS_industry_group), y = Value,
fill = fct_rev(GICS_industry_group)),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
facet_rep_wrap(~fct_rev(Variable), scales = "free_y",
ncol = 1, repeat.tick.labels = "y") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma_format(accuracy = 0.1)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Stock Selling Prices Each Day per GICS Industry Group",
subtitle = "Faceted by Pricing Type; Open, High, Low, Close") +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_text(angle = 90,
hjust = 1, vjust = 0.25),
text = element_text(size = 12),
panel.border = element_blank(),
panel.background = element_rect("grey80"))
ggplot(filter(ASX_Long_Lower, Variable != "Volume")) +
geom_boxplot(aes(x = fct_rev(GICS_industry_group), y = Value,
fill = fct_rev(GICS_industry_group)),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
facet_rep_wrap(~fct_rev(Variable), scales = "free_y",
ncol = 1, repeat.tick.labels = "y") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma_format(accuracy = 0.1)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Stock Selling Prices Each Day per GICS Industry Group",
subtitle = "Faceted by Pricing Type; Open, High, Low, Close") +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_text(angle = 90,
hjust = 1, vjust = 0.25),
text = element_text(size = 12),
panel.border = element_blank(),
strip.background = element_rect("grey80"))
ggplot(filter(ASX_Long_Lower, Variable != "Volume")) +
geom_boxplot(aes(x = fct_rev(GICS_industry_group), y = Value,
fill = fct_rev(GICS_industry_group)),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
facet_rep_wrap(~fct_rev(Variable), scales = "free_y",
ncol = 1, repeat.tick.labels = "y") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma_format(accuracy = 0.1)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Stock Selling Prices Each Day per GICS Industry Group",
subtitle = "Faceted by Pricing Type; Open, High, Low, Close") +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_text(angle = 90,
hjust = 1, vjust = 0.25),
text = element_text(size = 12),
panel.border = element_blank(),
strip.background = element_rect(fill = "turquoise2",
alpha = 0.5),
strip.text = element_text("bold"))
ggplot(filter(ASX_Long_Lower, Variable != "Volume")) +
geom_boxplot(aes(x = fct_rev(GICS_industry_group), y = Value,
fill = fct_rev(GICS_industry_group)),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
facet_rep_wrap(~fct_rev(Variable), scales = "free_y",
ncol = 1, repeat.tick.labels = "y") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma_format(accuracy = 0.1)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Stock Selling Prices Each Day per GICS Industry Group",
subtitle = "Faceted by Pricing Type; Open, High, Low, Close") +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_text(angle = 90,
hjust = 1, vjust = 0.25),
text = element_text(size = 12),
panel.border = element_blank(),
strip.background = element_rect(fill = "turquoise2"),
strip.text = element_text("bold"))
ggplot(filter(ASX_Long_Lower, Variable != "Volume")) +
geom_boxplot(aes(x = fct_rev(GICS_industry_group), y = Value,
fill = fct_rev(GICS_industry_group)),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
facet_rep_wrap(~fct_rev(Variable), scales = "free_y",
ncol = 1, repeat.tick.labels = "y") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma_format(accuracy = 0.1)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Stock Selling Prices Each Day per GICS Industry Group",
subtitle = "Faceted by Pricing Type; Open, High, Low, Close") +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_text(angle = 90,
hjust = 1, vjust = 0.25),
text = element_text(size = 12),
panel.border = element_blank(),
strip.background = element_rect(fill = "turquoise2"),
strip.text = element_text(face = "bold",
size = 8))
ggplot(filter(ASX_Long_Lower, Variable != "Volume")) +
geom_boxplot(aes(x = fct_rev(GICS_industry_group), y = Value,
fill = fct_rev(GICS_industry_group)),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
facet_rep_wrap(~fct_rev(Variable), scales = "free_y",
ncol = 1, repeat.tick.labels = "y") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma_format(accuracy = 0.1)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Stock Selling Prices Each Day per GICS Industry Group",
subtitle = "Faceted by Pricing Type; Open, High, Low, Close") +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_text(angle = 90,
hjust = 1, vjust = 0.25),
text = element_text(size = 12),
panel.border = element_blank(),
strip.background = element_rect(fill = "turquoise2"),
strip.text = element_text(face = "bold"))
ggplot(filter(ASX_Long_Lower, Variable != "Volume")) +
geom_boxplot(aes(x = fct_rev(GICS_industry_group), y = Value,
fill = fct_rev(GICS_industry_group)),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
facet_rep_wrap(~fct_rev(Variable), scales = "free_y",
ncol = 1, repeat.tick.labels = "y") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma_format(accuracy = 0.1)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Stock Selling Prices Each Day per GICS Industry Group",
subtitle = "Faceted by Pricing Type; Open, High, Low, Close") +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_text(angle = 90,
hjust = 1, vjust = 0.25),
text = element_text(size = 12),
panel.border = element_blank(),
strip.background = element_rect(fill = "#c9fff7"),
strip.text = element_text(face = "bold"))
sort(unique(ASX_Long_Lower$GICS_industry_group))
ASX_Long_Lower$GICS_industry_group[is.na(ASX_Long_Lower$GICS_industry_group)]
ASX_Long_Lower$GICS_industry_group[is.na(ASX_Long_Lower$GICS_industry_group)] <-
"No Matching GICS Group"
ASX_Long_Lower$GICS_industry_group[ASX_Long_Lower$GICS_industry_group ==
"Not Applic"] <- "No Matching GICS Group"
ggplot(filter(ASX_Long_Lower, Variable != "Volume")) +
geom_boxplot(aes(x = fct_rev(GICS_industry_group), y = Value,
fill = fct_rev(GICS_industry_group)),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
facet_rep_wrap(~fct_rev(Variable), scales = "free_y",
ncol = 1, repeat.tick.labels = "y") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma_format(accuracy = 0.1)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Stock Selling Prices Each Day per GICS Industry Group",
subtitle = "Faceted by Pricing Type; Open, High, Low, Close") +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_text(angle = 90,
hjust = 1, vjust = 0.25),
text = element_text(size = 12),
panel.border = element_blank(),
strip.background = element_rect(fill = "#c9fff7"),
strip.text = element_text(face = "bold"))
ggplot(filter(ASX_Long_Lower, Variable != "Volume")) +
geom_boxplot(aes(x = GICS_industry_group, y = Value,
fill = GICS_industry_group),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
facet_rep_wrap(~fct_rev(Variable), scales = "free_y",
ncol = 1, repeat.tick.labels = "y") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma_format(accuracy = 0.1)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Stock Selling Prices Each Day per GICS Industry Group",
subtitle = "Faceted by Pricing Type; Open, High, Low, Close") +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_text(angle = 90,
hjust = 1, vjust = 0.25),
text = element_text(size = 12),
panel.border = element_blank(),
strip.background = element_rect(fill = "#c9fff7"),
strip.text = element_text(face = "bold"))
ggplot(ASX_Data_Lower) +
geom_boxplot(aes(x = fct_rev(GICS_industry_group), y = Volume,
fill = GICS_industry_group),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma,
breaks = seq(0, max(ASX_Data_Lower$Volume),
100000)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Volume of Stock Sold Each Day per GICS Industry Group") +
theme_minimal() +
coord_flip() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12),
panel.border = element_blank())
list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]
library(pacman)                         ## for loading multiple packages
suppressMessages(p_load(character.only = T,
install = F,
c("tidyverse",  ## thanks Hadley
"lubridate",  ## for handling dates
"forcats",    ## for categorial variables, not for felines
"zoo",        ## some data cleaning capabilities
"lemon",      ## add ons for ggplot
"rvest",      ## scraping web pages
"knitr",      ## knitting to RMarkdown
"kableExtra", ## add ons for knitr tables
"scales",     ## quick and easy formatting prettynums
"e1071",      ## for skew and kurtosis
"janitor")))  ## cleaning colnames
list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]
length(list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]) == 0
list.files(pattern = "jan"),
if (length(list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]) == 0) {
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]
ASX_Data_Week_Jan <- list()
ASX_Data_Month_Jan <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_Week_Jan[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_Month_Jan[[k]] <- do.call(rbind, ASX_Data_Week_Jan)
}
}
if(length(Week_files_no_zip)==0) {
h <- 1
repeat {
unzip(list.files(pattern = "week")[h])
h <- h+1
if (h > length(list.files(pattern = "week"))) {
break
}
}
}
if (length(list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]) == 0) {
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
}
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]
ASX_Data_Week_Jan <- list()
ASX_Data_Month_Jan <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_Week_Jan[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_Month_Jan[[k]] <- do.call(rbind, ASX_Data_Week_Jan)
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
if(length(Week_files_no_zip)==0) {
h <- 1
repeat {
unzip(list.files(pattern = "week")[h])
h <- h+1
if (h > length(list.files(pattern = "week"))) {
break
}
}
}
ASX_Data_List <- list()
ASX_Data_List_Week <- list()
for (i in 1:length(Week_files_no_zip)){
for (j in 1:length(list.files(path=Week_files_no_zip[i]))){
ASX_Data_List_Week[[j]] <- read_csv(file.path(Week_files_no_zip[i],
list.files(Week_files_no_zip[i])[j]),
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
}
ASX_Data_List[[i]] <- do.call(rbind, ASX_Data_List_Week)
}
ASX_Data_Frame_Jan <- do.call(rbind, ASX_Data_Month_Jan)
ASX_Data_Frame_Post_Jan <- do.call(rbind, ASX_Data_List)
ASX_Data_Frame <- rbind(ASX_Data_Frame_Jan,
ASX_Data_Frame_Post_Jan)
kable_styling(kable(sample_n(ASX_Data_Frame, size=20),
align = "rrrrrrrll"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F)
ASX_Data_Frame <- distinct(ASX_Data_Frame,
ASX_Ticker, Date,
.keep_all = T)
if (length(list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]) == 0) {
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
}
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]
ASX_Data_Week_Jan <- list()
ASX_Data_Month_Jan <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_Week_Jan[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_Month_Jan[[k]] <- do.call(rbind, ASX_Data_Week_Jan)
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
if(length(Week_files_no_zip)==0) {
h <- 1
repeat {
unzip(list.files(pattern = "week")[h])
h <- h+1
if (h > length(list.files(pattern = "week"))) {
break
}
}
}
ASX_Data_List <- list()
ASX_Data_List_Week <- list()
for (i in 1:length(Week_files_no_zip)){
for (j in 1:length(list.files(path=Week_files_no_zip[i]))){
ASX_Data_List_Week[[j]] <- read_csv(file.path(Week_files_no_zip[i],
list.files(Week_files_no_zip[i])[j]),
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
}
ASX_Data_List[[i]] <- do.call(rbind, ASX_Data_List_Week)
}
length(Week_files_no_zip)
Week_files
Zip_files
Week_files_no_zip
if (length(list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]) == 0) {
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
}
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]
ASX_Data_Week_Jan <- list()
ASX_Data_Month_Jan <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_Week_Jan[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_Month_Jan[[k]] <- do.call(rbind, ASX_Data_Week_Jan)
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
if(length(Week_files_no_zip)==0) {
h <- 1
repeat {
unzip(list.files(pattern = "week")[h])
h <- h+1
if (h > length(list.files(pattern = "week"))) {
break
}
}
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
ASX_Data_List <- list()
ASX_Data_List_Week <- list()
for (i in 1:length(Week_files_no_zip)){
for (j in 1:length(list.files(path=Week_files_no_zip[i]))){
ASX_Data_List_Week[[j]] <- read_csv(file.path(Week_files_no_zip[i],
list.files(Week_files_no_zip[i])[j]),
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
}
ASX_Data_List[[i]] <- do.call(rbind, ASX_Data_List_Week)
}
ASX_Data_Frame_Jan <- do.call(rbind, ASX_Data_Month_Jan)
ASX_Data_Frame_Post_Jan <- do.call(rbind, ASX_Data_List)
ASX_Data_Frame <- rbind(ASX_Data_Frame_Jan,
ASX_Data_Frame_Post_Jan)
kable_styling(kable(sample_n(ASX_Data_Frame, size=20),
align = "rrrrrrrll"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F)
ASX_Data_Frame <- distinct(ASX_Data_Frame,
ASX_Ticker, Date,
.keep_all = T)
