scale_x_continuous(labels=comma_format(accuracy = 0.1),
limits = c(0,20)) +
facet_rep_wrap(~Variable, repeat.tick.labels = T,
scales = "free_y", ncol = 2) +
labs(title = "Univariate Density Plots of each Pricing Feature and Volume",
subtitle = "Truncated x-axes") +
theme_minimal()
kable_styling(kable(sample_n(ASX_Data_Frame, size=20),
align = "rrrrrrrll",
caption = "ASX Data Frame with Prices and Volume: 20 \`ASX_Ticker\`s"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
kable_styling(kable(sample_n(ASX_Industry_Table, size = 20),
caption = "ASX Data Frame with GICS: 20 \`ASX_Ticker`s"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
kable_styling(kable(sample_n(ASX_Industry_Table, size = 20),
caption = "ASX Data Frame with GICS: 20 \`ASX_Ticker\`s"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
kable_styling(kable(sample_n(ASX_Industry_Table, size = 20),
caption = "ASX Data Frame with GICS: 20 `ASX_Ticker`s"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
kable_styling(kable(sample_n(ASX_Data_Frame, 20),
align = "lrrrrrrl",
caption = "Table 3: ASX Data Frame with Company_name removed: 20 ASX_Tickers"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
kable_styling(kable(ASX_kable[, c(1, 8:14)],
align = "lrrrrrrr",
caption = "Table 9: Descriptives after filtering by \`High\` price and Volume (cont)"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
if (length(list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]) == 0) {
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
}
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]
ASX_Data_Week_Jan <- list()
ASX_Data_Month_Jan <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_Week_Jan[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_Month_Jan[[k]] <- do.call(rbind, ASX_Data_Week_Jan)
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
if(length(Week_files_no_zip)==0) {
h <- 1
repeat {
unzip(list.files(pattern = "week")[h])
h <- h+1
if (h > length(list.files(pattern = "week"))) {
break
}
}
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
ASX_Data_List <- list()
ASX_Data_List_Week <- list()
for (i in 1:length(Week_files_no_zip)){
for (j in 1:length(list.files(path=Week_files_no_zip[i]))){
ASX_Data_List_Week[[j]] <- read_csv(file.path(Week_files_no_zip[i],
list.files(Week_files_no_zip[i])[j]),
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
}
ASX_Data_List[[i]] <- do.call(rbind, ASX_Data_List_Week)
}
ASX_Data_Frame_Jan <- do.call(rbind, ASX_Data_Month_Jan)
ASX_Data_Frame_Post_Jan <- do.call(rbind, ASX_Data_List)
ASX_Data_Frame <- rbind(ASX_Data_Frame_Jan,
ASX_Data_Frame_Post_Jan)
kable_styling(kable(sample_n(ASX_Data_Frame, size=20),
align = "rrrrrrrll",
caption = "Table 1: ASX Data Frame with Prices and Volume: 20 ASX_Tickers"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
ASX_Data_Frame <- distinct(ASX_Data_Frame,
ASX_Ticker, Date,
.keep_all = T)
if (length(list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]) == 0) {
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
}
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(
list.files(pattern = "jan"),
".zip")]
ASX_Data_Week_Jan <- list()
ASX_Data_Month_Jan <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_Week_Jan[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_Month_Jan[[k]] <- do.call(rbind, ASX_Data_Week_Jan)
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
if(length(Week_files_no_zip)==0) {
h <- 1
repeat {
unzip(list.files(pattern = "week")[h])
h <- h+1
if (h > length(list.files(pattern = "week"))) {
break
}
}
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
ASX_Data_List <- list()
ASX_Data_List_Week <- list()
for (i in 1:length(Week_files_no_zip)){
for (j in 1:length(list.files(path=Week_files_no_zip[i]))){
ASX_Data_List_Week[[j]] <- read_csv(file.path(Week_files_no_zip[i],
list.files(Week_files_no_zip[i])[j]),
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
}
ASX_Data_List[[i]] <- do.call(rbind, ASX_Data_List_Week)
}
ASX_Data_Frame_Jan <- do.call(rbind, ASX_Data_Month_Jan)
ASX_Data_Frame_Post_Jan <- do.call(rbind, ASX_Data_List)
ASX_Data_Frame <- rbind(ASX_Data_Frame_Jan,
ASX_Data_Frame_Post_Jan)
kable_styling(kable(sample_n(ASX_Data_Frame, size=20),
align = "rrrrrrrll",
caption = "Table 1 - ASX Data Frame with Prices and Volume - 20 ASX_Tickers"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
ASX_Data_Frame <- distinct(ASX_Data_Frame,
ASX_Ticker, Date,
.keep_all = T)
ASX_Html_Pages <- list()
for (i in 1:length(letters)) {
ASX_Html_Pages[[i]] <- paste0(
"https://www.asx.com.au/asx/research/listedCompanies.do?coName=",
toupper(letters[i]))
}
ASX_Html_Pages[length(ASX_Html_Pages)+1] <-
"https://www.asx.com.au/asx/research/listedCompanies.do?coName=0-9"
ASX_Html_Read_list <- list()
for (i in 1:length(ASX_Html_Pages)) {
ASX_Html_Read_list[i] <- html_table(
html_nodes(
read_html(x=ASX_Html_Pages[[i]]),
"table"),
fill = T)
if (i > length(ASX_Html_Pages)) {
break
}
}
ASX_Industry_Table <- do.call(rbind, ASX_Html_Read_list)
ASX_Industry_Table <- clean_names(ASX_Industry_Table, "parsed")
ASX_Industry_Table <- select(ASX_Industry_Table,
-Company_name)
kable_styling(kable(sample_n(ASX_Industry_Table, size = 20),
caption = "ASX Data Frame with GICS - 20 ASX\\_Tickers"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
ASX_Data_Frame <- left_join(x = ASX_Data_Frame,
y = ASX_Industry_Table,
by = c("ASX_Ticker" = "ASX_code"))
kable_styling(kable(sample_n(ASX_Data_Frame, 20),
align = "lrrrrrrl",
caption = "Sample of ASX Data Frame with
GICS\\_industry\\_group added - 20 ASX\\_Tickers"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
ASX_Ticker_Summary_Volume <-
summarise(group_by(ASX_Data_Frame, ASX_Ticker),
"n Observations" = comma(n()),
"Min Date" = format(ymd(min(Date)), "%d/%m/%Y"),
"Max Date" = format(ymd(max(Date)), "%d/%m/%Y"),
"Minimum" = min(Volume),
"Q1" = quantile(Volume, 0.25),
"Median" = quantile(Volume, 0.5),
"Q3" = quantile(Volume, 0.75),
"90th Percentile" = quantile(Volume, 0.9),
"95th Percentile" = quantile(Volume, 0.95),
"Maximum" = max(Volume),
"Skew" = round(skewness(Volume), 3),
"Kurtosis" = round(kurtosis(Volume), 3))
ASX_kable <- sample_n(ASX_Ticker_Summary_Volume, 20)
kable_styling(kable(ASX_kable[, 1:7],
align = "lrrrrrr",
caption = "Descriptives for 20 ASX\\_Tickers after
filtering by High price and Volume"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
kable_styling(kable(ASX_kable[, c(1, 8:14)],
align = "lrrrrrrr",
caption = "Descriptives after filtering by
High price and Volume (cont)"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
ASX_Ticker_Summary_Volume <-
summarise(group_by(ASX_Data_Frame, ASX_Ticker),
"n Observations" = comma(n()),
"Min Date" = format(ymd(min(Date)), "%d/%m/%Y"),
"Max Date" = format(ymd(max(Date)), "%d/%m/%Y"),
"Minimum" = min(Volume),
"Q1" = quantile(Volume, 0.25),
"Median" = quantile(Volume, 0.5),
"Q3" = quantile(Volume, 0.75),
"90th Percentile" = quantile(Volume, 0.9),
"95th Percentile" = quantile(Volume, 0.95),
"Maximum" = max(Volume),
"Skew" = round(skewness(Volume), 3),
"Kurtosis" = round(kurtosis(Volume), 3))
ASX_kable <- sample_n(ASX_Ticker_Summary_Volume, 20)
kable_styling(kable(ASX_kable[, 1:7],
align = "lrrrrrr",
caption = "Descriptives for 20 ASX\\_Tickers after
filtering by High price and Volume"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
kable_styling(kable(ASX_kable[, c(1, 8:13)],
align = "lrrrrrrr",
caption = "Descriptives after filtering by
High price and Volume (cont)"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
ASX_Lower_Volume <- filter(ASX_Ticker_Summary_Volume,
Maximum < quantile(Maximum, 1/3))
ASX_Long_Lower <- filter(ASX_Long_Lower, ASX_Ticker %in% ASX_Lower_Volume$ASX_Ticker)
ASX_Data_Lower <- filter(ASX_Data_Lower, ASX_Ticker %in% ASX_Lower_Volume$ASX_Ticker)
kable_styling(kable(sample_n(ASX_Data_Lower, 20),
align = "lrrrrrrl",
caption = "Sample of ASX Data Frame After filtering by
High price and Volume"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
kable_styling(kable(ASX_kable[, c(1, 8:13)],
align = "lrrrrrrr",
caption = "Descriptives after filtering by
High price and Volume (cont)"),
latex_options = c("striped", "hold_position"),
position = "center",
full_width = F,
font_size = 10)
ASX_kable
ggplot(ASX_Data_Lower) +
geom_boxplot(aes(x = fct_rev(GICS_industry_group), y = Volume,
fill = GICS_industry_group),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma,
breaks = seq(0, max(ASX_Data_Lower$Volume),
100000)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Volume of Stock Sold Each Day per GICS Industry Group") +
theme_minimal() +
coord_flip() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12),
panel.border = element_blank())
ggplot(ASX_Data_Lower) +
geom_boxplot(aes(x = fct_rev(GICS_industry_group), y = Volume,
fill = GICS_industry_group),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma,
breaks = seq(0, max(ASX_Data_Lower$Volume),
100000)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Volume of Stock Sold Each Day per GICS Industry Group") +
theme_minimal() +
coord_flip() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12),
panel.border = element_blank())
ASX_Long_Lower$GICS_industry_group[is.na(ASX_Long_Lower$GICS_industry_group)] <-
"No Matching GICS Group"
ASX_Long_Lower$GICS_industry_group[ASX_Long_Lower$GICS_industry_group ==
"Not Applic"] <- "No Matching GICS Group"
ggplot(filter(ASX_Long_Lower, Variable != "Volume")) +
geom_boxplot(aes(x = GICS_industry_group, y = Value,
fill = GICS_industry_group),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
facet_rep_wrap(~fct_rev(Variable), scales = "free_y",
ncol = 1, repeat.tick.labels = "y") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma_format(accuracy = 0.1)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Stock Selling Prices Each Day per GICS Industry Group",
subtitle = "Faceted by Pricing Type; Open, High, Low, Close") +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_text(angle = 90,
hjust = 1, vjust = 0.25),
text = element_text(size = 12),
panel.border = element_blank(),
strip.background = element_rect(fill = "#c9fff7"),
strip.text = element_text(face = "bold"))
ASX_Long_Lower$GICS_industry_group[is.na(ASX_Long_Lower$GICS_industry_group)] <-
"No Matching GICS Group"
ASX_Long_Lower$GICS_industry_group[ASX_Long_Lower$GICS_industry_group ==
"Not Applic"] <- "No Matching GICS Group"
ggplot(filter(ASX_Long_Lower, Variable != "Volume")) +
geom_boxplot(aes(x = GICS_industry_group, y = Value,
fill = GICS_industry_group),
show.legend = F, col = "black",
size = 1,
outlier.size = 1.25,
outlier.colour = "blue3") +
facet_rep_wrap(~fct_rev(Variable), scales = "free_y",
ncol = 1, repeat.tick.labels = "y") +
scale_x_discrete("GICS Industry Group") +
scale_y_continuous("Volume of Stock Sold each Day",
labels = comma_format(accuracy = 0.1)) +
scale_fill_manual(values = fill_grad) +
labs(title = "Stock Selling Prices Each Day per GICS Industry Group",
subtitle = "Faceted by Pricing Type; Open, High, Low, Close") +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_text(angle = 90,
hjust = 1, vjust = 0.25),
text = element_text(size = 12),
panel.border = element_blank(),
strip.background = element_rect(fill = "#c9fff7"),
strip.text = element_text(face = "bold"))
ASX_Lower_Vol <- summarise(group_by(ASX_Data_Lower,
GICS_industry_group),
Mean_Vol = mean(Volume),
n_Companies = n())
ASX_Lower_Vol$GICS_industry_group <- factor(ASX_Lower_Vol$GICS_industry_group,
levels = ASX_Lower_Vol$GICS_industry_group[
order(ASX_Lower_Vol$Mean_Vol)])
fill_grad <-
seq_gradient_pal("cyan",
"blue3")(seq(0,1,
length.out = length(
unique(ASX_Lower_Vol$GICS_industry_group))))
ggplot(ASX_Lower_Vol) +
geom_bar(aes(x = GICS_industry_group, y = Mean_Vol,
fill = GICS_industry_group),
stat = "identity", show.legend = F,
alpha = 0.75) +
geom_text(aes(x = GICS_industry_group,
y = Mean_Vol,
label = paste("n =",
n_Companies)),
hjust=-0.25) +
scale_y_continuous(breaks = seq(0,max(ASX_Lower_Vol$Mean_Vol), 25000),
limits = c(0,max(ASX_Lower_Vol$Mean_Vol)*1.1),
expand = c(0,0),
labels = comma,
"Mean Volume of Shares Sold") +
scale_x_discrete("GICS Industry Group Type") +
ggtitle("Mean Volume of Shares Sold per GICS Group") +
scale_fill_manual(values = fill_grad) +
theme_minimal() +
coord_flip() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12),
panel.border = element_blank())
ASX_Data_Lower$GICS_industry_group <- recode(ASX_Data_Lower$GICS_industry_group,
"Not Applic"="Not Applicable")
ASX_Data_Lower$GICS_industry_group[is.na(
ASX_Data_Lower$GICS_industry_group)] <-
"No Matching GICS Group"
ASX_Data_Lower$GICS_industry_group[ASX_Data_Lower$GICS_industry_group == "NA"] <-
"No Matching GICS Group"
fill_grad <-
seq_gradient_pal("blue3",
"cyan")(seq(0,1,
length.out = length(
unique(ASX_Data_Lower$GICS_industry_group))))
ASX_Data_Count <- summarise(group_by(ASX_Data_Lower,
GICS_industry_group),
"Count" = n())
ggplot(ASX_Data_Lower, aes(x = fct_rev(fct_infreq(GICS_industry_group)),
fill = fct_infreq(GICS_industry_group))) +
geom_bar(show.legend = F, alpha = 0.75) +
geom_text(data = filter(ASX_Data_Count,
GICS_industry_group != "Materials"),
aes(x = GICS_industry_group,
y = Count,
label = comma(Count)),
hjust = -0.1) +
geom_text(data = filter(ASX_Data_Count,
GICS_industry_group == "Materials"),
aes(x = GICS_industry_group,
y = Count,
label = comma(Count)),
hjust = 1.25, col="white") +
ggtitle("Frequencies of each GICS Industry Type") +
scale_y_continuous(breaks = seq(0, max(ASX_Data_Count$Count)*1.075,
by = 500),
limits = c(0, max(ASX_Data_Count$Count)*1.075),
expand = c(0,0),
labels = comma,
"Number of ASX_Tickers") +
scale_x_discrete("GICS Industry Group Type") +
scale_fill_manual(values = c(fill_grad)) +
theme_minimal() +
coord_flip() +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12),
panel.border = element_blank())
ggplot(ASX_Data_Samples) +
geom_line(aes(x=Date, y=Volume),
size=1.25, col = "turquoise4") +
scale_x_date(date_breaks = "month", date_labels = "%b-%y") +
scale_y_continuous("Volume Sold",
labels = comma)+
ggtitle("Volume of Stock Sold of 21 Shares from 02-01-2019 to 12-04-2019") +
facet_rep_wrap(~ASX_Ticker, repeat.tick.labels = T,
scales = "free_y", ncol = 3) +
theme_minimal() +
theme(text = element_text(size = 12))
ggplot(ASX_Data_Samples) +
geom_line(aes(x=Date, y=Volume),
size=1.25, col = "turquoise4") +
scale_x_date(date_breaks = "month", date_labels = "%b-%y") +
scale_y_continuous("Volume Sold",
labels = comma)+
ggtitle("Volume of Stock Sold of 21 Shares from 02-01-2019 to 12-04-2019") +
facet_rep_wrap(~ASX_Ticker, repeat.tick.labels = T,
scales = "free_y", ncol = 3) +
theme_minimal() +
theme(text = element_text(size = 12))
