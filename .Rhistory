ASX_Data_List[[i]] <- do.call(rbind, ASX_Data_List_Temp)
}
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(list.files(pattern = "jan"), ".zip")]
ASX_Data_List_Jan <- list()
ASX_Data_List_Jan_bind <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_List_Jan_bind[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_List_Jan[[k]] <- do.call(rbind, ASX_Data_List_Jan_bind)
}
ASX_Data_Frame <- do.call(rbind, ASX_Data_List)
ASX_Data_Frame <- do.call(rbind, ASX_Data_List_Jan)
head(ASX_Data_Frame, 20)
sample_n(ASX_Data_Frame, size=20)
rm(ASX_Data_List, ASX_Data_List_Temp)
ASX_Long <- gather(ASX_Data_Frame,
Open:Volume,
key="Variable",
value="Value")
ASX_Summary <- summarise(group_by(ASX_Long,
Variable),
"n ASX_Tickers" = comma(length(unique(ASX_Ticker))),
"n Observations" = comma(n()),
"Min Date" = format(ymd(min(Date)), "%d/%m/%Y"),
"Max Date" = format(ymd(max(Date)), "%d/%m/%Y"),
"Minimum" = comma(min(Value)),
"Q1" = comma(quantile(Value, 0.25)),
"Median" = comma(quantile(Value, 0.5)),
"Q3" = comma(quantile(Value, 0.75)),
"90th Percentile" = comma(quantile(Value, 0.9)),
"95th Percentile" = comma(quantile(Value, 0.95)),
"Maximum" = comma(max(Value)),
"Skew" = round(skewness(Value), 3),
"Kurtosis" = round(kurtosis(Value), 2),
"NA count" = comma(sum(is.na(ASX_Data_Frame))))
kable_styling(kable(ASX_Summary),
full_width = T,
bootstrap_options = c("striped"),
position = "float_left")
nrow(ASX_Data_Frame)
sort(unique(ASX_Data_Frame$Date))
ASX_Data_List
for (i in 1:length(Week_files_no_zip)){
for (j in 1:length(list.files(path=Week_files_no_zip[i]))){
ASX_Data_List_Temp[[j]] <- read_csv(file.path(Week_files_no_zip[i],
list.files(Week_files_no_zip[i])[j]),
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
}
ASX_Data_List[[i]] <- do.call(rbind, ASX_Data_List_Temp)
}
h <- 1
repeat {
unzip(list.files(pattern = "week")[h])
h <- h+1
if (h > length(list.files(pattern = "week"))) {
break
}
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
ASX_Data_List <- list()
ASX_Data_Frame <- data.frame()
ASX_Data_List_Temp <- list()
for (i in 1:length(Week_files_no_zip)){
for (j in 1:length(list.files(path=Week_files_no_zip[i]))){
ASX_Data_List_Temp[[j]] <- read_csv(file.path(Week_files_no_zip[i],
list.files(Week_files_no_zip[i])[j]),
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
}
ASX_Data_List[[i]] <- do.call(rbind, ASX_Data_List_Temp)
}
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(list.files(pattern = "jan"), ".zip")]
ASX_Data_List_Jan <- list()
ASX_Data_List_Jan_bind <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_List_Jan_bind[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_List_Jan[[k]] <- do.call(rbind, ASX_Data_List_Jan_bind)
}
ASX_Data_Frame <- do.call(rbind, ASX_Data_List)
ASX_Data_Frame <- do.call(rbind, ASX_Data_List_Jan)
head(ASX_Data_Frame, 20)
sample_n(ASX_Data_Frame, size=20)
# rm(ASX_Data_List, ASX_Data_List_Temp)
ASX_Data_List
ASX_Data_List_Jan
ASX_Data_Frame
min(ASX_Data_Frame$Date)
max(ASX_Data_Frame$Date)
do.call(rbind, ASX_Data_List)
list.files(pattern = "week")
ASX_Data_List_Temp
ASX_Data_List
h <- 1
repeat {
unzip(list.files(pattern = "week")[h])
h <- h+1
if (h > length(list.files(pattern = "week"))) {
break
}
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
ASX_Data_List <- list()
ASX_Data_Frame <- data.frame()
ASX_Data_List_Temp <- list()
for (i in 1:length(Week_files_no_zip)){
for (j in 1:length(list.files(path=Week_files_no_zip[i]))){
ASX_Data_List_Temp[[j]] <- read_csv(file.path(Week_files_no_zip[i],
list.files(Week_files_no_zip[i])[j]),
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
}
ASX_Data_List[[i]] <- do.call(rbind, ASX_Data_List_Temp)
}
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(list.files(pattern = "jan"), ".zip")]
ASX_Data_List_Jan <- data.frame()
ASX_Data_List_Jan_bind <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_List_Jan_bind[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_List_Jan[[k]] <- do.call(rbind, ASX_Data_List_Jan_bind)
}
ASX_Data_List_Jan
ASX_Data_List_Jan <- do.call(rbind, ASX_Data_List_Jan_bind)
ASX_Data_List_Jan
do.call(rbind, ASX_Data_List_Temp)
list.files(pattern = "jan")
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(list.files(pattern = "jan"), ".zip")]
ASX_Data_Week_Jan <- data.frame()
ASX_Data_Month_Jan <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_Week_Jan[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_Month_Jan <- do.call(rbind, ASX_Data_List_Jan_bind)
}
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(list.files(pattern = "jan"), ".zip")]
ASX_Data_Week_Jan <- data.frame()
ASX_Data_Month_Jan <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_Week_Jan[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_Month_Jan[[k]] <- do.call(rbind, ASX_Data_List_Jan_bind)
}
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(list.files(pattern = "jan"), ".zip")]
ASX_Data_Week_Jan <- list()
ASX_Data_Month_Jan <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_Week_Jan[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_Month_Jan[[k]] <- do.call(rbind, ASX_Data_List_Jan_bind)
}
h <- 1
repeat {
unzip(list.files(pattern = "week")[h])
h <- h+1
if (h > length(list.files(pattern = "week"))) {
break
}
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
ASX_Data_List <- list()
ASX_Data_List_Temp <- list()
for (i in 1:length(Week_files_no_zip)){
for (j in 1:length(list.files(path=Week_files_no_zip[i]))){
ASX_Data_List_Temp[[j]] <- read_csv(file.path(Week_files_no_zip[i],
list.files(Week_files_no_zip[i])[j]),
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
}
ASX_Data_LIst[[i]] <- do.call(rbind, ASX_Data_List_Temp)
}
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(list.files(pattern = "jan"), ".zip")]
ASX_Data_Week_Jan <- list()
ASX_Data_Month_Jan <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_Week_Jan[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_Month_Jan[[k]] <- do.call(rbind, ASX_Data_List_Jan_bind)
}
h <- 1
repeat {
unzip(list.files(pattern = "week")[h])
h <- h+1
if (h > length(list.files(pattern = "week"))) {
break
}
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
ASX_Data_List <- list()
ASX_Data_List_Temp <- list()
for (i in 1:length(Week_files_no_zip)){
for (j in 1:length(list.files(path=Week_files_no_zip[i]))){
ASX_Data_List_Temp[[j]] <- read_csv(file.path(Week_files_no_zip[i],
list.files(Week_files_no_zip[i])[j]),
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
}
ASX_Data_List[[i]] <- do.call(rbind, ASX_Data_List_Temp)
}
ASX_Data_Frame_Post_Jan <- do.call(rbind, ASX_Data_List)
ASX_Data_Frame_Jan <- do.call(rbind, ASX_Data_List_Jan)
ASX_Data_Frame <- rbind(ASX_Data_Frame_Jan,
ASX_Data_Frame_Post_Jan)
ASX_Data_Frame_Jan
do.call(rbind, ASX_Data_List)
do.call(rbind, ASX_Data_List_Jan)
ASX_Data_List_Jan
min(ASX_Data_List_Jan)
min(ASX_Data_List_Jan$Date)
maz(ASX_Data_List_Jan$Date)
max(ASX_Data_List_Jan$Date)
do.call(rbind, ASX_Data_Month_Jan)
ASX_Data_Month_Jan
ASX_Data_Frame_Jan <- do.call(rbind, ASX_Data_Month_Jan)
max(ASX_Data_Frame_Jan$Date)
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(list.files(pattern = "jan"), ".zip")]
ASX_Data_Week_Jan <- list()
ASX_Data_Month_Jan <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_Week_Jan[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_Month_Jan[[k]] <- do.call(rbind, ASX_Data_Week_Jan)
}
h <- 1
repeat {
unzip(list.files(pattern = "week")[h])
h <- h+1
if (h > length(list.files(pattern = "week"))) {
break
}
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
ASX_Data_List <- list()
ASX_Data_List_Temp <- list()
for (i in 1:length(Week_files_no_zip)){
for (j in 1:length(list.files(path=Week_files_no_zip[i]))){
ASX_Data_List_Temp[[j]] <- read_csv(file.path(Week_files_no_zip[i],
list.files(Week_files_no_zip[i])[j]),
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
}
ASX_Data_List[[i]] <- do.call(rbind, ASX_Data_List_Temp)
}
ASX_Data_Frame_Jan <- do.call(rbind, ASX_Data_Month_Jan)
ASX_Data_Frame_Post_Jan <- do.call(rbind, ASX_Data_List)
ASX_Data_Frame <- rbind(ASX_Data_Frame_Jan,
ASX_Data_Frame_Post_Jan)
max(ASX_Data_Frame$Date)
head(ASX_Data_Frame, 20)
sample_n(ASX_Data_Frame, size=20)
# rm(ASX_Data_List, ASX_Data_List_Temp)
min(ASX_Data_Frame$Date)
max(ASX_Data_Frame$Date)
unique(ASX_Data_Frame$Date)
summarise(group_by(ASX_Data_Frame, Date),
"n" = n())
View(summarise(group_by(ASX_Data_Frame, Date),
"n" = n()))
View(summarise(group_by(ASX_Data_Frame, ASX_Ticker),
"n" = n()))
View(ASX_Data_Frame)
View(arrange(ASX_Data_Frame, ASX_Ticker))
View(arrange(ASX_Data_Frame, ASX_Ticker, Date))
max(ASX_Data_Frame$Date) - min(ASX_Data_Frame$Date)
max(ASX_Data_Frame$Date)
max(ymd(ASX_Data_Frame$Date)) - min(ymd(ASX_Data_Frame$Date))
dmy("12-04-2019") - dmy("01-01-2019")
dmy("12-04-2019") - dmy("02-01-2019")
read_csv("/week20190201/20190129.txt",
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
read_csv("week20190201/20190129.txt",
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
read_csv("week20190201/20190129.txt",
col_names=c("ASX_Ticker",
"Date" = ymd(),
"Open",
"High",
"Low",
"Close",
"Volume"))
test <- read_csv("week20190201/20190129.txt",
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
as.Date(test$Date)
ymd(test$Date)
rm(test)
ASX_Data_Frame
View(summarise(group_by(ASX_Data_Frame, ASX_Ticker),
"n" = n()))
View(arrange(ASX_Data_Frame, ASX_Ticker, Date)))
View(arrange(ASX_Data_Frame, ASX_Ticker, Date))
distinct(ASX_Data_Frame)
ASX_Data_Frame
ASX_Data_List_Week
rm(list=ls())
gc()
Jan_file <- list.files(pattern = "jan")
unzip(Jan_file)
Jan_File_no_zip <- list.files(pattern = "jan")[!str_detect(list.files(pattern = "jan"), ".zip")]
ASX_Data_Week_Jan <- list()
ASX_Data_Month_Jan <- list()
for (k in 1:length(list.files(Jan_File_no_zip))) {
ASX_Data_Week_Jan[[k]] <- read_csv( file.path(Jan_File_no_zip,
list.files(Jan_File_no_zip)[k]),
col_names = c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume") )
ASX_Data_Month_Jan[[k]] <- do.call(rbind, ASX_Data_Week_Jan)
}
h <- 1
repeat {
unzip(list.files(pattern = "week")[h])
h <- h+1
if (h > length(list.files(pattern = "week"))) {
break
}
}
Week_files <- list.files(pattern = "week")
Zip_files <- list.files(pattern = ".zip")
Week_files_no_zip <- Week_files[!Week_files %in% Zip_files]
ASX_Data_List <- list()
ASX_Data_List_Week <- list()
for (i in 1:length(Week_files_no_zip)){
for (j in 1:length(list.files(path=Week_files_no_zip[i]))){
ASX_Data_List_Week[[j]] <- read_csv(file.path(Week_files_no_zip[i],
list.files(Week_files_no_zip[i])[j]),
col_names=c("ASX_Ticker",
"Date",
"Open",
"High",
"Low",
"Close",
"Volume"))
}
ASX_Data_List[[i]] <- do.call(rbind, ASX_Data_List_Week)
}
ASX_Data_Frame_Jan <- do.call(rbind, ASX_Data_Month_Jan)
ASX_Data_Frame_Post_Jan <- do.call(rbind, ASX_Data_List)
ASX_Data_Frame <- rbind(ASX_Data_Frame_Jan,
ASX_Data_Frame_Post_Jan)
max(ASX_Data_Frame$Date)
head(ASX_Data_Frame, 20)
sample_n(ASX_Data_Frame, size=20)
# rm(ASX_Data_List, ASX_Data_List_Temp)
ASX_Data_Frame
View(summarise(group_by(ASX_Data_Frame, ASX_Ticker),
"n" = n()))
install.packages("memer")
library(memer)
install.packages("meme")
meme(img="//C:/Users/benco.DESKTOP-K1JS793/Pictures/Horseposting/dale loss.png")
library(meme)
meme(img="//C:/Users/benco.DESKTOP-K1JS793/Pictures/Horseposting/dale loss.png")
meme(img="C:/Users/benco.DESKTOP-K1JS793/Pictures/Horseposting/dale loss.png")
meme(img="C:/Users/benco.DESKTOP-K1JS793/Pictures/Horseposting/dale loss.png",
upper="hello Courtney",
bottom = "bottom text")
meme(img="C:/Users/benco.DESKTOP-K1JS793/Pictures/Horseposting/dale loss.png",
upper="hello Courtney",
lower = "bottom text")
meme(img="C:/Users/benco.DESKTOP-K1JS793/Pictures/Horseposting/dale loss.png",
upper="hello Courtney",
lower = "bottom text",
font="impact")
meme(img="C:/Users/benco.DESKTOP-K1JS793/Pictures/Horseposting/dale loss.png",
upper="hello Courtney",
lower = "bottom text",
font="helvetica")
devtools::install_github("sctyner/memer")
install.packages("devtools")
devtools::install_github("sctyner/memer")
library(memer)
memer::meme_list()
meme_text_chopper("FryNotSure", "not sure if working")
meme_text_drake("not sure if working")
meme_text_chopper("FryNotSure")
